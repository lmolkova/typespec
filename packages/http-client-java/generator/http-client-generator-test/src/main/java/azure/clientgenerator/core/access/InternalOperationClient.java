// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.clientgenerator.core.access;

import azure.clientgenerator.core.access.implementation.InternalOperationsImpl;
import azure.clientgenerator.core.access.internaloperation.implementation.models.InternalDecoratorModelInInternal;
import azure.clientgenerator.core.access.internaloperation.implementation.models.NoDecoratorModelInInternal;
import azure.clientgenerator.core.access.internaloperation.models.PublicDecoratorModelInInternal;
import io.clientcore.core.annotations.Metadata;
import io.clientcore.core.annotations.ServiceClient;
import io.clientcore.core.http.exceptions.HttpResponseException;
import io.clientcore.core.http.models.RequestOptions;
import io.clientcore.core.http.models.Response;
import io.clientcore.core.instrumentation.Instrumentation;

/**
 * Initializes a new instance of the synchronous AccessClient type.
 */
@ServiceClient(builder = AccessClientBuilder.class)
public final class InternalOperationClient {
    @Metadata(generated = true)
    private final InternalOperationsImpl serviceClient;

    private final Instrumentation instrumentation;

    /**
     * Initializes an instance of InternalOperationClient class.
     * 
     * @param serviceClient the service client implementation.
     * @param instrumentation the instrumentation instance.
     */
    @Metadata(generated = true)
    InternalOperationClient(InternalOperationsImpl serviceClient, Instrumentation instrumentation) {
        this.serviceClient = serviceClient;
        this.instrumentation = instrumentation;
    }

    /**
     * The noDecoratorInInternal operation.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     * }
     * }
     * </pre>
     * 
     * @param name The name parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return used in an internal operation, should be generated but not exported.
     */
    @Metadata(generated = true)
    Response<NoDecoratorModelInInternal> noDecoratorInInternalWithResponse(String name, RequestOptions requestOptions) {
        return this.instrumentation.instrumentWithResponse(
            "_Specs_.Azure.ClientGenerator.Core.Access.InternalOperation.noDecoratorInInternal", requestOptions,
            updatedOptions -> this.serviceClient.noDecoratorInInternalWithResponse(name, updatedOptions));
    }

    /**
     * The internalDecoratorInInternal operation.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     * }
     * }
     * </pre>
     * 
     * @param name The name parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return used in an internal operation, should be generated but not exported.
     */
    @Metadata(generated = true)
    Response<InternalDecoratorModelInInternal> internalDecoratorInInternalWithResponse(String name,
        RequestOptions requestOptions) {
        return this.instrumentation.instrumentWithResponse(
            "_Specs_.Azure.ClientGenerator.Core.Access.InternalOperation.internalDecoratorInInternal", requestOptions,
            updatedOptions -> this.serviceClient.internalDecoratorInInternalWithResponse(name, updatedOptions));
    }

    /**
     * The publicDecoratorInInternal operation.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     name: String (Required)
     * }
     * }
     * </pre>
     * 
     * @param name The name parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return used in an internal operation but with public decorator, should be generated and exported.
     */
    @Metadata(generated = true)
    Response<PublicDecoratorModelInInternal> publicDecoratorInInternalWithResponse(String name,
        RequestOptions requestOptions) {
        return this.instrumentation.instrumentWithResponse(
            "_Specs_.Azure.ClientGenerator.Core.Access.InternalOperation.publicDecoratorInInternal", requestOptions,
            updatedOptions -> this.serviceClient.publicDecoratorInInternalWithResponse(name, updatedOptions));
    }

    /**
     * The noDecoratorInInternal operation.
     * 
     * @param name The name parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return used in an internal operation, should be generated but not exported.
     */
    @Metadata(generated = true)
    NoDecoratorModelInInternal noDecoratorInInternal(String name) {
        // Generated convenience method for noDecoratorInInternalWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return noDecoratorInInternalWithResponse(name, requestOptions).getValue();
    }

    /**
     * The internalDecoratorInInternal operation.
     * 
     * @param name The name parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return used in an internal operation, should be generated but not exported.
     */
    @Metadata(generated = true)
    InternalDecoratorModelInInternal internalDecoratorInInternal(String name) {
        // Generated convenience method for internalDecoratorInInternalWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return internalDecoratorInInternalWithResponse(name, requestOptions).getValue();
    }

    /**
     * The publicDecoratorInInternal operation.
     * 
     * @param name The name parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return used in an internal operation but with public decorator, should be generated and exported.
     */
    @Metadata(generated = true)
    PublicDecoratorModelInInternal publicDecoratorInInternal(String name) {
        // Generated convenience method for publicDecoratorInInternalWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return publicDecoratorInInternalWithResponse(name, requestOptions).getValue();
    }
}
