// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.core.lro.standard.implementation;

import azure.core.foundations.models.ErrorResponse;
import azure.core.foundations.models.OperationStatusError;
import azure.core.lro.standard.StandardServiceVersion;
import azure.core.lro.standard.models.User;
import azure.core.models.ResourceOperationStatusUserExportedUserError;
import io.clientcore.core.annotations.ServiceInterface;
import io.clientcore.core.http.annotations.BodyParam;
import io.clientcore.core.http.annotations.HeaderParam;
import io.clientcore.core.http.annotations.HostParam;
import io.clientcore.core.http.annotations.HttpRequestInformation;
import io.clientcore.core.http.annotations.PathParam;
import io.clientcore.core.http.annotations.QueryParam;
import io.clientcore.core.http.annotations.UnexpectedResponseExceptionDetail;
import io.clientcore.core.http.models.HttpMethod;
import io.clientcore.core.http.models.RequestOptions;
import io.clientcore.core.http.models.Response;
import io.clientcore.core.http.pipeline.HttpPipeline;
import io.clientcore.core.models.binarydata.BinaryData;
import io.clientcore.core.serialization.ObjectSerializer;
import java.lang.reflect.InvocationTargetException;

/**
 * Initializes a new instance of the StandardClient type.
 */
public final class StandardClientImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final StandardClientService service;

    /**
     * Service host.
     */
    private final String endpoint;

    /**
     * Gets Service host.
     * 
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /**
     * Service version.
     */
    private final StandardServiceVersion serviceVersion;

    /**
     * Gets Service version.
     * 
     * @return the serviceVersion value.
     */
    public StandardServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /**
     * The HTTP pipeline to send requests through.
     */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * Initializes an instance of StandardClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param endpoint Service host.
     * @param serviceVersion Service version.
     */
    public StandardClientImpl(HttpPipeline httpPipeline, String endpoint, StandardServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.endpoint = endpoint;
        this.serviceVersion = serviceVersion;
        this.service = RestProxy.create(StandardClientService.class, this.httpPipeline);
    }

    /**
     * The interface defining all the services for StandardClient to be used by the proxy service to perform REST calls.
     */
    @ServiceInterface(name = "StandardClient", host = "{endpoint}")
    public interface StandardClientService {
        static StandardClientService getNewInstance(HttpPipeline pipeline, ObjectSerializer serializer,
            @HostParam("endpoint") String endpoint, @QueryParam("api-version") String apiVersion,
            @PathParam("name") String name, @HeaderParam("Accept") String accept) {
            try {
                Class<?> clazz = Class.forName("azure.core.lro.standard.implementation.StandardClientServiceImpl");
                return (StandardClientService) clazz
                    .getMethod("getNewInstance", HttpPipeline.class, ObjectSerializer.class, String.class, String.class,
                        String.class, String.class)
                    .invoke(null, pipeline, serializer, endpoint, apiVersion, name, accept);
            } catch (ClassNotFoundException | NoSuchMethodException | IllegalAccessException
                | InvocationTargetException e) {
                throw new RuntimeException(e);
            }

        }

        @HttpRequestInformation(
            method = HttpMethod.PUT,
            path = "/azure/core/lro/standard/users/{name}",
            expectedStatusCodes = { 200, 201 })
        @UnexpectedResponseExceptionDetail(exceptionBodyClass = ErrorResponse.class)
        Response<User> createOrReplace(@HeaderParam("Content-Type") String contentType,
            @BodyParam("application/json") BinaryData resource, RequestOptions requestOptions);

        @HttpRequestInformation(
            method = HttpMethod.PUT,
            path = "/azure/core/lro/standard/users/{name}",
            expectedStatusCodes = { 200, 201 })
        @UnexpectedResponseExceptionDetail(exceptionBodyClass = ErrorResponse.class)
        default User createOrReplace(@HeaderParam("Content-Type") String contentType,
            @BodyParam("application/json") BinaryData resource) {
            return createOrReplace(contentType, resource, null).getValue();
        }

        @HttpRequestInformation(
            method = HttpMethod.DELETE,
            path = "/azure/core/lro/standard/users/{name}",
            expectedStatusCodes = { 202 })
        @UnexpectedResponseExceptionDetail(exceptionBodyClass = ErrorResponse.class)
        Response<OperationStatusError> delete(RequestOptions requestOptions);

        @HttpRequestInformation(
            method = HttpMethod.DELETE,
            path = "/azure/core/lro/standard/users/{name}",
            expectedStatusCodes = { 202 })
        @UnexpectedResponseExceptionDetail(exceptionBodyClass = ErrorResponse.class)
        default OperationStatusError delete() {
            return delete(null).getValue();
        }

        @HttpRequestInformation(
            method = HttpMethod.POST,
            path = "/azure/core/lro/standard/users/{name}:export",
            expectedStatusCodes = { 202 })
        @UnexpectedResponseExceptionDetail(exceptionBodyClass = ErrorResponse.class)
        Response<ResourceOperationStatusUserExportedUserError> export(@QueryParam("format") String format,
            RequestOptions requestOptions);

        @HttpRequestInformation(
            method = HttpMethod.POST,
            path = "/azure/core/lro/standard/users/{name}:export",
            expectedStatusCodes = { 202 })
        @UnexpectedResponseExceptionDetail(exceptionBodyClass = ErrorResponse.class)
        default ResourceOperationStatusUserExportedUserError export(@QueryParam("format") String format) {
            return export(format, null).getValue();
        }
    }
}
