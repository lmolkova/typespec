// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.clientgenerator.core.apiversion.path;

import azure.clientgenerator.core.apiversion.path.implementation.PathClientImpl;
import io.clientcore.core.annotations.Metadata;
import io.clientcore.core.annotations.ServiceClient;
import io.clientcore.core.http.exceptions.HttpResponseException;
import io.clientcore.core.http.models.RequestOptions;
import io.clientcore.core.http.models.Response;
import io.clientcore.core.instrumentation.Instrumentation;

/**
 * Initializes a new instance of the synchronous PathClient type.
 */
@ServiceClient(builder = PathClientBuilder.class)
public final class PathClient {
    @Metadata(generated = true)
    private final PathClientImpl serviceClient;

    private final Instrumentation instrumentation;

    /**
     * Initializes an instance of PathClient class.
     * 
     * @param serviceClient the service client implementation.
     * @param instrumentation the instrumentation instance.
     */
    @Metadata(generated = true)
    PathClient(PathClientImpl serviceClient, Instrumentation instrumentation) {
        this.serviceClient = serviceClient;
        this.instrumentation = instrumentation;
    }

    /**
     * Path api version parameter.
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    @Metadata(generated = true)
    public Response<Void> pathApiVersionWithResponse(RequestOptions requestOptions) {
        return this.instrumentation.instrumentWithResponse("Client.AlternateApiVersion.Service.Path.pathApiVersion",
            requestOptions, updatedOptions -> this.serviceClient.pathApiVersionWithResponse(updatedOptions));
    }

    /**
     * Path api version parameter.
     * 
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Metadata(generated = true)
    public void pathApiVersion() {
        // Generated convenience method for pathApiVersionWithResponse
        RequestOptions requestOptions = new RequestOptions();
        pathApiVersionWithResponse(requestOptions).getValue();
    }
}
