// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.core.scalar.models;

import io.clientcore.core.annotations.Metadata;
import io.clientcore.core.annotations.TypeConditions;
import io.clientcore.core.serialization.json.JsonReader;
import io.clientcore.core.serialization.json.JsonSerializable;
import io.clientcore.core.serialization.json.JsonToken;
import io.clientcore.core.serialization.json.JsonWriter;
import java.io.IOException;

/**
 * The AzureLocationModel model.
 */
@Metadata(conditions = { TypeConditions.IMMUTABLE })
public final class AzureLocationModel implements JsonSerializable<AzureLocationModel> {
    /*
     * The location property.
     */
    @Metadata(generated = true)
    private final String location;

    /**
     * Creates an instance of AzureLocationModel class.
     * 
     * @param location the location value to set.
     */
    @Metadata(generated = true)
    public AzureLocationModel(String location) {
        this.location = location;
    }

    /**
     * Get the location property: The location property.
     * 
     * @return the location value.
     */
    @Metadata(generated = true)
    public String getLocation() {
        return this.location;
    }

    /**
     * {@inheritDoc}
     */
    @Metadata(generated = true)
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("location", this.location);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AzureLocationModel from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AzureLocationModel if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the AzureLocationModel.
     */
    @Metadata(generated = true)
    public static AzureLocationModel fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String location = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("location".equals(fieldName)) {
                    location = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new AzureLocationModel(location);
        });
    }
}
