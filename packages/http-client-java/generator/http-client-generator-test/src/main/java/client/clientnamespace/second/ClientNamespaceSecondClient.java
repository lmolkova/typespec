// Code generated by Microsoft (R) TypeSpec Code Generator.

package client.clientnamespace.second;

import client.clientnamespace.implementation.ClientNamespaceSecondClientImpl;
import client.clientnamespace.second.models.SecondClientResult;
import io.clientcore.core.annotations.Metadata;
import io.clientcore.core.annotations.ServiceClient;
import io.clientcore.core.http.exceptions.HttpResponseException;
import io.clientcore.core.http.models.RequestOptions;
import io.clientcore.core.http.models.Response;
import io.clientcore.core.instrumentation.Instrumentation;

/**
 * Initializes a new instance of the synchronous ClientNamespaceSecondClient type.
 */
@ServiceClient(builder = ClientNamespaceSecondClientBuilder.class)
public final class ClientNamespaceSecondClient {
    @Metadata(generated = true)
    private final ClientNamespaceSecondClientImpl serviceClient;

    private final Instrumentation instrumentation;

    /**
     * Initializes an instance of ClientNamespaceSecondClient class.
     * 
     * @param serviceClient the service client implementation.
     * @param instrumentation the instrumentation instance.
     */
    @Metadata(generated = true)
    ClientNamespaceSecondClient(ClientNamespaceSecondClientImpl serviceClient, Instrumentation instrumentation) {
        this.serviceClient = serviceClient;
        this.instrumentation = instrumentation;
    }

    /**
     * The getSecond operation.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     type: String(second) (Required)
     * }
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    @Metadata(generated = true)
    public Response<SecondClientResult> getSecondWithResponse(RequestOptions requestOptions) {
        return this.instrumentation.instrumentWithResponse(
            "ClientNameSpaceClient.ClientNamespaceSecondClient.getSecond", requestOptions,
            updatedOptions -> this.serviceClient.getSecondWithResponse(updatedOptions));
    }

    /**
     * The getSecond operation.
     * 
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Metadata(generated = true)
    public SecondClientResult getSecond() {
        // Generated convenience method for getSecondWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getSecondWithResponse(requestOptions).getValue();
    }
}
