// Code generated by Microsoft (R) TypeSpec Code Generator.

package client.naming;

import client.naming.implementation.UnionEnumsImpl;
import client.naming.unionenum.models.ClientExtensibleEnum;
import client.naming.unionenum.models.ExtensibleEnum;
import io.clientcore.core.annotations.Metadata;
import io.clientcore.core.annotations.ServiceClient;
import io.clientcore.core.http.exceptions.HttpResponseException;
import io.clientcore.core.http.models.RequestOptions;
import io.clientcore.core.http.models.Response;
import io.clientcore.core.instrumentation.Instrumentation;
import io.clientcore.core.models.binarydata.BinaryData;

/**
 * Initializes a new instance of the synchronous NamingClient type.
 */
@ServiceClient(builder = NamingClientBuilder.class)
public final class UnionEnumClient {
    @Metadata(generated = true)
    private final UnionEnumsImpl serviceClient;

    private final Instrumentation instrumentation;

    /**
     * Initializes an instance of UnionEnumClient class.
     * 
     * @param serviceClient the service client implementation.
     * @param instrumentation the instrumentation instance.
     */
    @Metadata(generated = true)
    UnionEnumClient(UnionEnumsImpl serviceClient, Instrumentation instrumentation) {
        this.serviceClient = serviceClient;
        this.instrumentation = instrumentation;
    }

    /**
     * The unionEnumName operation.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * String(value1)
     * }
     * </pre>
     * 
     * @param body The body parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    @Metadata(generated = true)
    public Response<Void> unionEnumNameWithResponse(BinaryData body, RequestOptions requestOptions) {
        return this.instrumentation.instrumentWithResponse("Client.Naming.UnionEnum.unionEnumName", requestOptions,
            updatedOptions -> this.serviceClient.unionEnumNameWithResponse(body, updatedOptions));
    }

    /**
     * The unionEnumMemberName operation.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * String(value1/value2)
     * }
     * </pre>
     * 
     * @param body The body parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    @Metadata(generated = true)
    public Response<Void> unionEnumMemberNameWithResponse(BinaryData body, RequestOptions requestOptions) {
        return this.instrumentation.instrumentWithResponse("Client.Naming.UnionEnum.unionEnumMemberName",
            requestOptions, updatedOptions -> this.serviceClient.unionEnumMemberNameWithResponse(body, updatedOptions));
    }

    /**
     * The unionEnumName operation.
     * 
     * @param body The body parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Metadata(generated = true)
    public void unionEnumName(ClientExtensibleEnum body) {
        // Generated convenience method for unionEnumNameWithResponse
        RequestOptions requestOptions = new RequestOptions();
        unionEnumNameWithResponse(BinaryData.fromObject(body == null ? null : body.getValue()), requestOptions)
            .getValue();
    }

    /**
     * The unionEnumMemberName operation.
     * 
     * @param body The body parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Metadata(generated = true)
    public void unionEnumMemberName(ExtensibleEnum body) {
        // Generated convenience method for unionEnumMemberNameWithResponse
        RequestOptions requestOptions = new RequestOptions();
        unionEnumMemberNameWithResponse(BinaryData.fromObject(body == null ? null : body.getValue()), requestOptions)
            .getValue();
    }
}
