// Code generated by Microsoft (R) TypeSpec Code Generator.

package tsptest.versioning;

import io.clientcore.core.annotations.Metadata;
import io.clientcore.core.annotations.ReturnType;
import io.clientcore.core.annotations.ServiceClient;
import io.clientcore.core.annotations.ServiceMethod;
import io.clientcore.core.http.exceptions.HttpResponseException;
import io.clientcore.core.http.models.PagedIterable;
import io.clientcore.core.http.models.RequestOptions;
import io.clientcore.core.instrumentation.Instrumentation;
import java.util.List;
import tsptest.versioning.implementation.VersioningOpsImpl;
import tsptest.versioning.models.Resource;

/**
 * Initializes a new instance of the synchronous VersioningClient type.
 */
@ServiceClient(builder = VersioningClientBuilder.class)
public final class VersioningClient {
    @Metadata(generated = true)
    private final VersioningOpsImpl serviceClient;

    private final Instrumentation instrumentation;

    /**
     * Initializes an instance of VersioningClient class.
     * 
     * @param serviceClient the service client implementation.
     * @param instrumentation the instrumentation instance.
     */
    @Metadata(generated = true)
    VersioningClient(VersioningOpsImpl serviceClient, Instrumentation instrumentation) {
        this.serviceClient = serviceClient;
        this.instrumentation = instrumentation;
    }

    /**
     * Resource list operation template.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>select</td><td>List&lt;String&gt;</td><td>No</td><td>Select the specified fields to be included in the
     * response. Call {@link RequestOptions#addQueryParam} to add string to array.</td></tr>
     * <tr><td>expand</td><td>String</td><td>No</td><td>The expand parameter</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * PagedResource
     * }
     * </pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return paged collection of Resource items.
     */
    @Metadata(generated = true)
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<Resource> list(RequestOptions requestOptions) {
        return this.instrumentation.instrumentWithResponse("TspTest.Versioning.VersioningOp.list", requestOptions,
            updatedOptions -> this.serviceClient.list(updatedOptions));
    }

    /**
     * Resource list operation template.
     * 
     * @param select Select the specified fields to be included in the response.
     * @param expand The expand parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return paged collection of Resource items.
     */
    @Metadata(generated = true)
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<Resource> list(List<String> select, String expand) {
        // Generated convenience method for list
        RequestOptions requestOptions = new RequestOptions();
        if (select != null) {
            for (String paramItemValue : select) {
                if (paramItemValue != null) {
                    requestOptions.addQueryParam("select", paramItemValue);
                }
            }
        }
        if (expand != null) {
            requestOptions.addQueryParam("expand", expand);
        }
        return serviceClient.list(requestOptions);
    }

    /**
     * Resource list operation template.
     * 
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return paged collection of Resource items.
     */
    @Metadata(generated = true)
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<Resource> list() {
        // Generated convenience method for list
        RequestOptions requestOptions = new RequestOptions();
        return serviceClient.list(requestOptions);
    }
}
