// Code generated by Microsoft (R) TypeSpec Code Generator.

package tsptest.optional;

import io.clientcore.core.annotations.Metadata;
import io.clientcore.core.annotations.ServiceClient;
import io.clientcore.core.http.exceptions.HttpResponseException;
import io.clientcore.core.http.models.HttpHeaderName;
import io.clientcore.core.http.models.RequestOptions;
import io.clientcore.core.http.models.Response;
import io.clientcore.core.instrumentation.Instrumentation;
import io.clientcore.core.models.binarydata.BinaryData;
import tsptest.optional.implementation.OptionalOpsImpl;
import tsptest.optional.models.AllPropertiesOptional;
import tsptest.optional.models.Optional;

/**
 * Initializes a new instance of the synchronous OptionalClient type.
 */
@ServiceClient(builder = OptionalClientBuilder.class)
public final class OptionalClient {
    @Metadata(generated = true)
    private final OptionalOpsImpl serviceClient;

    private final Instrumentation instrumentation;

    /**
     * Initializes an instance of OptionalClient class.
     * 
     * @param serviceClient the service client implementation.
     * @param instrumentation the instrumentation instance.
     */
    @Metadata(generated = true)
    OptionalClient(OptionalOpsImpl serviceClient, Instrumentation instrumentation) {
        this.serviceClient = serviceClient;
        this.instrumentation = instrumentation;
    }

    /**
     * The put operation.
     * <p><strong>Query Parameters</strong></p>
     * <table border="1">
     * <caption>Query Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>booleanNullable</td><td>Boolean</td><td>No</td><td>The booleanNullable parameter</td></tr>
     * <tr><td>string</td><td>String</td><td>No</td><td>The string parameter</td></tr>
     * <tr><td>stringNullable</td><td>String</td><td>No</td><td>The stringNullable parameter</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addQueryParam}
     * <p><strong>Header Parameters</strong></p>
     * <table border="1">
     * <caption>Header Parameters</caption>
     * <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
     * <tr><td>Content-Type</td><td>String</td><td>No</td><td>The content type. Allowed values:
     * "application/json".</td></tr>
     * <tr><td>request-header-optional</td><td>String</td><td>No</td><td>The requestHeaderOptional parameter</td></tr>
     * </table>
     * You can add these to a request with {@link RequestOptions#addHeader}
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     boolean: Boolean (Optional)
     *     booleanNullable: Boolean (Optional)
     *     booleanRequired: boolean (Required)
     *     booleanRequiredNullable: Boolean (Required)
     *     string: String (Optional)
     *     stringNullable: String (Optional)
     *     stringRequired: String (Required)
     *     stringRequiredNullable: String (Required)
     *     bytes: byte[] (Optional)
     *     int: Integer (Optional)
     *     long: Long (Optional)
     *     float: Double (Optional)
     *     double: Double (Optional)
     *     duration: Duration (Optional)
     *     dateTime: OffsetDateTime (Optional)
     *     stringList (Optional): [
     *         String (Optional)
     *     ]
     *     bytesDict (Optional): {
     *         String: byte[] (Required)
     *     }
     *     epochDateTimeRequiredNullable: Long (Required)
     *     epochDateTimeNullable: Long (Optional)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     boolean: Boolean (Optional)
     *     booleanNullable: Boolean (Optional)
     *     booleanRequired: Boolean (Optional)
     *     booleanRequiredNullable: Boolean (Optional)
     *     string: String (Optional)
     *     stringNullable: String (Optional)
     *     stringRequired: String (Optional)
     *     stringRequiredNullable: String (Optional)
     *     bytes: byte[] (Optional)
     *     int: Integer (Optional)
     *     long: Long (Optional)
     *     float: Double (Optional)
     *     double: Double (Optional)
     *     duration: Duration (Optional)
     *     dateTime: OffsetDateTime (Optional)
     *     stringList (Optional): [
     *         String (Optional)
     *     ]
     *     bytesDict (Optional): {
     *         String: byte[] (Required)
     *     }
     *     epochDateTimeRequiredNullable: Long (Optional)
     *     epochDateTimeNullable: Long (Optional)
     *     immutable (Optional): {
     *         stringReadWriteRequired: String (Required)
     *         stringReadOnlyOptional: String (Optional)
     *     }
     * }
     * }
     * </pre>
     * 
     * @param requestHeaderRequired The requestHeaderRequired parameter.
     * @param booleanRequired The booleanRequired parameter.
     * @param booleanRequiredNullable The booleanRequiredNullable parameter.
     * @param stringRequired The stringRequired parameter.
     * @param stringRequiredNullable The stringRequiredNullable parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    @Metadata(generated = true)
    public Response<AllPropertiesOptional> putWithResponse(String requestHeaderRequired, boolean booleanRequired,
        Boolean booleanRequiredNullable, String stringRequired, String stringRequiredNullable,
        RequestOptions requestOptions) {
        return this.instrumentation.instrumentWithResponse("TspTest.Optional.OptionalOp.put", requestOptions,
            updatedOptions -> this.serviceClient.putWithResponse(requestHeaderRequired, booleanRequired,
                booleanRequiredNullable, stringRequired, stringRequiredNullable, updatedOptions));
    }

    /**
     * The put operation.
     * 
     * @param requestHeaderRequired The requestHeaderRequired parameter.
     * @param booleanRequired The booleanRequired parameter.
     * @param booleanRequiredNullable The booleanRequiredNullable parameter.
     * @param stringRequired The stringRequired parameter.
     * @param stringRequiredNullable The stringRequiredNullable parameter.
     * @param requestHeaderOptional The requestHeaderOptional parameter.
     * @param booleanNullable The booleanNullable parameter.
     * @param string The string parameter.
     * @param stringNullable The stringNullable parameter.
     * @param optional The optional parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Metadata(generated = true)
    public AllPropertiesOptional put(String requestHeaderRequired, boolean booleanRequired,
        Boolean booleanRequiredNullable, String stringRequired, String stringRequiredNullable,
        String requestHeaderOptional, Boolean booleanNullable, String string, String stringNullable,
        Optional optional) {
        // Generated convenience method for putWithResponse
        RequestOptions requestOptions = new RequestOptions();
        if (requestHeaderOptional != null) {
            requestOptions.setHeader(HttpHeaderName.fromString("request-header-optional"), requestHeaderOptional);
        }
        if (booleanNullable != null) {
            requestOptions.addQueryParam("booleanNullable", String.valueOf(booleanNullable));
        }
        if (string != null) {
            requestOptions.addQueryParam("string", string);
        }
        if (stringNullable != null) {
            requestOptions.addQueryParam("stringNullable", stringNullable);
        }
        if (optional != null) {
            requestOptions.setBody(BinaryData.fromObject(optional));
        }
        return putWithResponse(requestHeaderRequired, booleanRequired, booleanRequiredNullable, stringRequired,
            stringRequiredNullable, requestOptions).getValue();
    }

    /**
     * The put operation.
     * 
     * @param requestHeaderRequired The requestHeaderRequired parameter.
     * @param booleanRequired The booleanRequired parameter.
     * @param booleanRequiredNullable The booleanRequiredNullable parameter.
     * @param stringRequired The stringRequired parameter.
     * @param stringRequiredNullable The stringRequiredNullable parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Metadata(generated = true)
    public AllPropertiesOptional put(String requestHeaderRequired, boolean booleanRequired,
        Boolean booleanRequiredNullable, String stringRequired, String stringRequiredNullable) {
        // Generated convenience method for putWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return putWithResponse(requestHeaderRequired, booleanRequired, booleanRequiredNullable, stringRequired,
            stringRequiredNullable, requestOptions).getValue();
    }
}
